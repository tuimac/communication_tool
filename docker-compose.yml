version: '3.9'
services:

  # Database server
  postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: postgresql
    hostname: postgresql
    restart: always
    pids_limit: 100
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
      - ./postgresql/config:/etc/postgresql
      - ./postgresql/wal_archive:/var/lib/postgresql/archive
      - ./postgresql/logs:/var/log/postgresql
    command: postgres -c config_file=/etc/postgresql/postgresql.conf -c hba_file=/etc/postgresql/pg_hba.conf
    environment:
      - TZ
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    networks:
      - communication

  # Mattermost server
  mattermost:
    depends_on:
      - postgres
    image: mattermost/${MATTERMOST_IMAGE}:${MATTERMOST_VERSION}
    container_name: mattermost
    hostname: mattermost
    restart: always
    pids_limit: 200
    volumes:
      - ./mattermost/config:/mattermost/config
      - ./mattermost/data:/mattermost/data
      - ./mattermost/logs:/mattermost/logs
      - ./mattermost/plugins:/mattermost/plugins
      - ./mattermost/client/plugins:/mattermost/client/plugins
      - ./mattermost/bleve-indexes:/mattermost/bleve-indexes
    environment:
      - TZ
      - MM_SQLSETTINGS_DRIVERNAME
      - MM_SQLSETTINGS_DATASOURCE
      - MM_BLEVESETTINGS_INDEXDIR
      - MM_SERVICESETTINGS_SITEURL
    networks:
      - communication

  # XMPP server(Jitsi)
  prosody:
    image: jitsi/prosody:${JITSI_VERSION}
    container_name: jitsi-xmpp
    hostname: jitsi-xmpp
    restart: always
    pids_limit: 200
    expose:
      - '5222'
      - '5347'
      - '5280'
    volumes:
      - ./jitsi/prosody/config:/config
      - ./jitsi/prosody/prosody-plugins-custom:/prosody-plugins-custom
    environment:
      - AUTH_TYPE
      - DISABLE_POLLS
      - ENABLE_AUTH
      - ENABLE_AV_MODERATION
      - ENABLE_BREAKOUT_ROOMS
      - ENABLE_GUESTS
      - ENABLE_LOBBY
      - ENABLE_XMPP_WEBSOCKET
      - GLOBAL_CONFIG
      - GLOBAL_MODULES
      - JIBRI_RECORDER_USER
      - JIBRI_RECORDER_PASSWORD
      - JIBRI_XMPP_USER
      - JIBRI_XMPP_PASSWORD
      - JICOFO_AUTH_USER
      - JICOFO_AUTH_PASSWORD
      - JICOFO_COMPONENT_SECRET
      - JIGASI_XMPP_USER
      - JIGASI_XMPP_PASSWORD
      - JVB_AUTH_USER
      - JVB_AUTH_PASSWORD
      - JWT_APP_ID
      - JWT_APP_SECRET
      - JWT_ACCEPTED_ISSUERS
      - JWT_ACCEPTED_AUDIENCES
      - JWT_ASAP_KEYSERVER
      - JWT_ALLOW_EMPTY
      - JWT_AUTH_TYPE
      - JWT_TOKEN_AUTH_MODULE
      - MATRIX_UVS_URL
      - MATRIX_UVS_ISSUER
      - MATRIX_UVS_AUTH_TOKEN
      - MATRIX_UVS_SYNC_POWER_LEVELS
      - LOG_LEVEL
      - LDAP_AUTH_METHOD
      - LDAP_BASE
      - LDAP_BINDDN
      - LDAP_BINDPW
      - LDAP_FILTER
      - LDAP_VERSION
      - LDAP_TLS_CIPHERS
      - LDAP_TLS_CHECK_PEER
      - LDAP_TLS_CACERT_FILE
      - LDAP_TLS_CACERT_DIR
      - LDAP_START_TLS
      - LDAP_URL
      - LDAP_USE_TLS
      - PUBLIC_URL
      - TURN_CREDENTIALS
      - TURN_HOST
      - TURNS_HOST
      - TURN_PORT
      - TURNS_PORT
      - TZ
      - XMPP_DOMAIN
      - XMPP_AUTH_DOMAIN
      - XMPP_GUEST_DOMAIN
      - XMPP_MUC_DOMAIN
      - XMPP_INTERNAL_MUC_DOMAIN
      - XMPP_MODULES
      - XMPP_MUC_MODULES
      - XMPP_INTERNAL_MUC_MODULES
      - XMPP_RECORDER_DOMAIN
      - XMPP_CROSS_DOMAIN
    networks:
      - communication

  # Focus component
  jicofo:
    image: jitsi/jicofo:${JITSI_VERSION}
    container_name: jitsi-jicofo
    hostname: jitsi-jicofo
    restart: always
    pids_limit: 200
    volumes:
      - ./jitsi/jicofo:/config
    environment:
      - AUTH_TYPE
      - BRIDGE_AVG_PARTICIPANT_STRESS
      - BRIDGE_STRESS_THRESHOLD
      - ENABLE_AUTH
      - ENABLE_AUTO_OWNER
      - ENABLE_CODEC_VP8
      - ENABLE_CODEC_VP9
      - ENABLE_CODEC_H264
      - ENABLE_OCTO
      - ENABLE_RECORDING
      - ENABLE_SCTP
      - ENABLE_AUTO_LOGIN
      - JICOFO_AUTH_USER
      - JICOFO_AUTH_PASSWORD
      - JICOFO_ENABLE_BRIDGE_HEALTH_CHECKS
      - JICOFO_CONF_INITIAL_PARTICIPANT_WAIT_TIMEOUT
      - JICOFO_CONF_SINGLE_PARTICIPANT_TIMEOUT
      - JICOFO_ENABLE_HEALTH_CHECKS
      - JICOFO_SHORT_ID
      - JICOFO_RESERVATION_ENABLED
      - JICOFO_RESERVATION_REST_BASE_URL
      - JIBRI_BREWERY_MUC
      - JIBRI_REQUEST_RETRIES
      - JIBRI_PENDING_TIMEOUT
      - JIGASI_BREWERY_MUC
      - JIGASI_SIP_URI
      - JVB_BREWERY_MUC
      - MAX_BRIDGE_PARTICIPANTS
      - OCTO_BRIDGE_SELECTION_STRATEGY
      - SENTRY_DSN="${JICOFO_SENTRY_DSN:-0}"
      - SENTRY_ENVIRONMENT
      - SENTRY_RELEASE
      - TZ
      - XMPP_DOMAIN
      - XMPP_AUTH_DOMAIN
      - XMPP_INTERNAL_MUC_DOMAIN
      - XMPP_MUC_DOMAIN
      - XMPP_RECORDER_DOMAIN
      - XMPP_SERVER
    depends_on:
      - prosody
    networks:
      - communication

  # Video Bridge server
  jvb:
    image: jitsi/jvb:${JITSI_VERSION}
    container_name: jitsi-video-bridge
    hostname: jitsi-video-bridge
    restart: always
    pids_limit: 200
    ports:
      - '${JVB_PORT}:${JVB_PORT}/udp'
      - '127.0.0.1:8080:8080'
    volumes:
      - ./jitsi/jvb:/config
    environment:
      - DOCKER_HOST_ADDRESS
      - ENABLE_COLIBRI_WEBSOCKET
      - ENABLE_OCTO
      - JVB_AUTH_USER
      - JVB_AUTH_PASSWORD
      - JVB_BREWERY_MUC
      - JVB_PORT
      - JVB_MUC_NICKNAME
      - JVB_STUN_SERVERS
      - JVB_OCTO_BIND_ADDRESS
      - JVB_OCTO_PUBLIC_ADDRESS
      - JVB_OCTO_BIND_PORT
      - JVB_OCTO_REGION
      - JVB_WS_DOMAIN
      - JVB_WS_SERVER_ID
      - PUBLIC_URL
      - SENTRY_DSN="${JVB_SENTRY_DSN:-0}"
      - SENTRY_ENVIRONMENT
      - SENTRY_RELEASE
      - COLIBRI_REST_ENABLED
      - SHUTDOWN_REST_ENABLED
      - TZ
      - XMPP_AUTH_DOMAIN
      - XMPP_INTERNAL_MUC_DOMAIN
      - XMPP_SERVER
    depends_on:
      - prosody
    networks:
      - communication

  # Reverse Proxy server
  nginx:
    depends_on:
      - mattermost
    image: nginx:${NGINX_VERSION}
    container_name: nginx
    hostname: nginx
    restart: always
    pids_limit: 100
    environment:
      - TZ
    ports:
      - ${HTTPS_PORT}:443
      - ${HTTP_PORT}:80
    volumes:
      - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/logs:/var/log/nginx
    networks:
      - communication

networks:
  communication:
    name: communication
